#!/bin/bash
# matt.pestle@nesi.org.nz
# April 2024
# fix_dns
#
# Script to fix the DNS issue with some images having an entry
# (192.168.122.1) in the /etc/resolv.conf that causes problems.
# We remove the entry, create the file
#      /etc/NetworkManager/conf.d/90-dns-none.conf
# with the contents
# [main]
# dns=none
#
# and restart the networking
# If anything changes, we echo "changed" to stdout so that
# if it's called from ansible this can be trapped and the
#   "changed" status of ansible will be sensible if you use
# something like this:
#   - name: copy in fix_dns script
#     become: true
#     copy:
#       src: scripts/fix_dns
#       dest: /tmp/fix_dns
#       mode: u+rwx,g-rx,o-rx
#
#   - name: adjust /etc/resolve.conf
#     become: true
#     command: /tmp/fix_dns
#     register: rslt
#     changed_when: "rslt.stdout == 'changed'"
#
#
# Then your ansible file will be "idempotent"

RESOLV_CONF=/etc/resolv.conf
OFFENDING_ENTRY="192.168.122.1"

ME=$(id -u)

((ME==0)) || {
    echo "This script must be run as root"
    exit 1
}

[[ -f $RESOLV_CONF ]] || {
    echo "No such file $RESOLV_CONF - something is terribly wrong"
    exit 1
}

((R=0))

[[ -f /etc/NetworkManager/conf.d/90-dns-none.conf ]] || {
    cat > /etc/NetworkManager/conf.d/90-dns-none.conf<<EOF || exit 1
[main]
dns=none
EOF
((R=R+1))
}

grep $OFFENDING_ENTRY $RESOLV_CONF > /dev/null && {
    sed -i "/$OFFENDING_ENTRY/d" $RESOLV_CONF || exit 1
    sed -i '/Generated by NetworkManager/d' $RESOLV_CONF|| exit 1
    ((R=R+1))
}

((R>0)) && {
    systemctl reload NetworkManager.service || exit 1
    echo changed
}

exit 0
